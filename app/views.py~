# coding=utf-8
from flask import render_template, flash, redirect, request, Flask, g, make_response
from flask import session, redirect, url_for, escape
from app import app
from app import db
from forms import LoginForm
from .models import User


from urp import urp
from checkevent import checkevent

import urllib
import urllib2
from urllib import urlencode
import json
import time
import hashlib
import xml.etree.ElementTree as ET






@app.route('/show', methods = ['GET'])
def secceed():
    return u'enjoy it!'



@app.route('/login', methods = ['GET', 'POST'])
def login():
    form = LoginForm()
    openid = request.args.get('openid', '')
    if  form.validate_on_submit():
    
        if urp(form.username.data, form.password_urp.data).login():
            
        
            
            
            user = User( openid , form.username.data, form.password_urp.data, form.password_drcom.data)
            db.session.add(user)
            db.session.commit()
            return redirect("/show")
            
            
        flash(u"用户名或密码有误")
    return render_template('login.html',
                            form = form )

@app.route('/weixin',methods=['GET','POST'])
def wechat_auth():
    if request.method == 'GET':
        token='jzp113'
        data = request.args
        signature = data.get('signature','')
        timestamp = data.get('timestamp','')
        nonce = data.get('nonce','')
        echostr = data.get('echostr','')
        s = [timestamp,nonce,token]
        s.sort()
        s = ''.join(s)
        if (hashlib.sha1(s).hexdigest() == signature):
            return make_response(echostr)
    else:
        rec = request.stream.read()
        xml_rec = ET.fromstring(rec)
        tou = xml_rec.find('ToUserName').text
        fromu = xml_rec.find('FromUserName').text
        
       
        if  xml_rec.find('EventKey') is None:
            contents = u'谢谢关注'
        
        
        else:
           
        
            key = xml_rec.find('EventKey').text
            contents = checkevent(fromu).key_check(key)
       
        

        return render_template('reply_text.xml',
        toUser = fromu,
        fromUser = tou,
        createtime = str(int(time.time())),
        content = contents
        )


